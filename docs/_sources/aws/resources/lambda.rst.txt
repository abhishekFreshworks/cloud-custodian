aws.lambda resources
####################



  - :ref:`aws.lambda <aws.lambda>`

  - :ref:`aws.lambda-layer <aws.lambda-layer>`




.. _aws.lambda:

aws.lambda
==========



Filters
-------


  - :ref:`check-permissions <aws.common.filters.check-permissions>`
  
  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`cross-account <aws.lambda.filters.cross-account>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`event-source <aws.lambda.filters.event-source>`

  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`network-location <aws.common.filters.network-location>`
  
  - :ref:`reserved-concurrency <aws.lambda.filters.reserved-concurrency>`

  - :ref:`security-group <aws.common.filters.security-group>`
  
  - :ref:`subnet <aws.common.filters.subnet>`
  
  - :ref:`value <aws.common.filters.value>`
  
  - :ref:`vpc <aws.common.filters.vpc>`
  


.. _aws.lambda.filters.cross-account:

cross-account
+++++++++++++
Filters lambda functions with cross-account permissions

The whitelist parameter can be used to prevent certain accounts
from being included in the results (essentially stating that these
accounts permissions are allowed to exist)

This can be useful when combining this filter with the delete action.

:example:

.. code-block:: yaml

        policies:
          - name: lambda-cross-account
            resource: lambda
            filters:
              - type: cross-account
                whitelist:
                  - 'IAM-Policy-Cross-Account-Access'

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      actions:
        items:
          type: string
        type: array
      everyone_only:
        type: boolean
      type:
        enum:
        - cross-account
      whitelist:
        items:
          type: string
        type: array
      whitelist_conditions:
        items:
          type: string
        type: array
      whitelist_from: &id001
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      whitelist_orgids:
        items:
          type: string
        type: array
      whitelist_orgids_from: *id001
      whitelist_vpc:
        items:
          type: string
        type: array
      whitelist_vpc_from: *id001
      whitelist_vpce:
        items:
          type: string
        type: array
      whitelist_vpce_from: *id001
    required:
    - type


.. _aws.lambda.filters.event-source:

event-source
++++++++++++


.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - event-source
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type


.. _aws.lambda.filters.reserved-concurrency:

reserved-concurrency
++++++++++++++++++++


.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - reserved-concurrency
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`copy-related-tag <aws.common.actions.copy-related-tag>`
  
  - :ref:`delete <aws.lambda.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-statements <aws.lambda.actions.remove-statements>`

  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`set-concurrency <aws.lambda.actions.set-concurrency>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.lambda.actions.delete:

delete
++++++
Delete a lambda function (including aliases and older versions).

:example:

.. code-block:: yaml

        policies:
          - name: lambda-delete-dotnet-functions
            resource: lambda
            filters:
              - Runtime: dotnetcore1.0
            actions:
              - delete

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type


.. _aws.lambda.actions.remove-statements:

remove-statements
+++++++++++++++++
Action to remove policy/permission statements from lambda functions.

:example:

.. code-block:: yaml

        policies:
          - name: lambda-remove-cross-accounts
            resource: lambda
            filters:
              - type: cross-account
            actions:
              - type: remove-statements
                statement_ids: matched

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      statement_ids:
        oneOf:
        - enum:
          - matched
        - items:
            type: string
          type: array
      type:
        enum:
        - remove-statements
    required:
    - statement_ids
    - type


.. _aws.lambda.actions.set-concurrency:

set-concurrency
+++++++++++++++
Set lambda function concurrency to the desired level.

Can be used to set the reserved function concurrency to an exact value,
to delete reserved concurrency, or to set the value to an attribute of
the resource.

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      expr:
        type: boolean
      type:
        enum:
        - set-concurrency
      value:
        oneOf:
        - type: string
        - type: integer
        - type: 'null'
    required:
    - value



.. _aws.lambda-layer:

aws.lambda-layer
================

Note custodian models the lambda layer version.

Layers end up being a logical asset, the physical asset for use
and management is the layer verison.

To ease that distinction, we support querying just the latest
layer version or having a policy against all layer versions.

By default we query all versions, the following is an example
to query just the latest.

.. code-block:: yaml

    policies:
      - name: lambda-layer
        resource: lambda
        query:
          - version: latest

Filters
-------


  - :ref:`cross-account <aws.lambda-layer.filters.cross-account>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.lambda-layer.filters.cross-account:

cross-account
+++++++++++++
Check a resource's embedded iam policy for cross account access.
    

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      actions:
        items:
          type: string
        type: array
      everyone_only:
        type: boolean
      type:
        enum:
        - cross-account
      whitelist:
        items:
          type: string
        type: array
      whitelist_conditions:
        items:
          type: string
        type: array
      whitelist_from: &id001
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      whitelist_orgids:
        items:
          type: string
        type: array
      whitelist_orgids_from: *id001
      whitelist_vpc:
        items:
          type: string
        type: array
      whitelist_vpc_from: *id001
      whitelist_vpce:
        items:
          type: string
        type: array
      whitelist_vpce_from: *id001
    required:
    - type




Actions
-------


  - :ref:`delete <aws.lambda-layer.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-statements <aws.lambda-layer.actions.remove-statements>`

  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.lambda-layer.actions.delete:

delete
++++++


.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type


.. _aws.lambda-layer.actions.remove-statements:

remove-statements
+++++++++++++++++


.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      statement_ids:
        oneOf:
        - enum:
          - matched
        - items:
            type: string
          type: array
      type:
        enum:
        - remove-statements
    required:
    - statement_ids
    - type


