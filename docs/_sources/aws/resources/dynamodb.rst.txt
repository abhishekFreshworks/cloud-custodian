aws.dynamodb resources
######################



  - :ref:`aws.dynamodb-backup <aws.dynamodb-backup>`

  - :ref:`aws.dynamodb-table <aws.dynamodb-table>`




.. _aws.dynamodb-backup:

aws.dynamodb-backup
===================



Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`value <aws.common.filters.value>`
  




Actions
-------


  - :ref:`delete <aws.dynamodb-backup.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.dynamodb-backup.actions.delete:

delete
++++++
Deletes backups of a DynamoDB table

:example:

.. code-block:: yaml

        policies:
          - name: dynamodb-delete-backup
            resource: dynamodb-backup
            filters:
              - type: value
                key: BackupCreationDateTime
                op: greater-than
                value_type: age
                value: 28
            actions:
              - type: delete

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type



.. _aws.dynamodb-table:

aws.dynamodb-table
==================



Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`health-event <aws.common.filters.health-event>`
  
  - :ref:`kms-key <aws.dynamodb-table.filters.kms-key>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.dynamodb-table.filters.kms-key:

kms-key
+++++++
Filter a resource by its associcated kms key and optionally the aliasname
of the kms key by using 'c7n:AliasName'

:example:

    .. code-block:: yaml

        policies:
            - name: dynamodb-kms-key-filters
              resource: dynamodb-table
              filters:
                - type: kms-key
                  key: c7n:AliasName
                  value: "^(alias/aws/dynamodb)"
                  op: regex

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      match-resource:
        type: boolean
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      operator:
        enum:
        - and
        - or
      type:
        enum:
        - kms-key
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`backup <aws.dynamodb-table.actions.backup>`

  - :ref:`delete <aws.dynamodb-table.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`set-stream <aws.dynamodb-table.actions.set-stream>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.dynamodb-table.actions.backup:

backup
++++++
Creates a manual backup of a DynamoDB table. Use of the optional
   prefix flag will attach a user specified prefix. Otherwise,
   the backup prefix will default to 'Backup'.

:example:

.. code-block:: yaml

        policies:
          - name: dynamodb-create-backup
            resource: dynamodb-table
            actions:
              - type: backup
                prefix: custom

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      prefix:
        type: string
      type:
        enum:
        - backup
    required:
    - type


.. _aws.dynamodb-table.actions.delete:

delete
++++++
Action to delete dynamodb tables

:example:

.. code-block:: yaml

        policies:
          - name: delete-empty-tables
            resource: dynamodb-table
            filters:
              - TableSizeBytes: 0
            actions:
              - delete

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type


.. _aws.dynamodb-table.actions.set-stream:

set-stream
++++++++++
Action to enable/disable streams on table.

:example:

.. code-block:: yaml

        policies:
          - name: stream-update
            resource: dynamodb-table
            filters:
              - TableName: 'test'
              - TableStatus: 'ACTIVE'
            actions:
              - type: set-stream
                state: True
                stream_view_type: 'NEW_IMAGE'

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      state:
        type: boolean
      stream_view_type:
        type: string
      type:
        enum:
        - set-stream
    required:
    - type


