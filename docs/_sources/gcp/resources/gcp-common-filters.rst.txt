GCP Common Filters
==================

Filters


   - :ref:`event <GCP.common.filters.event>`


   - :ref:`offhour <GCP.common.filters.offhour>`


   - :ref:`onhour <GCP.common.filters.onhour>`


   - :ref:`value <GCP.common.filters.value>`




.. _GCP.common.filters.event:

event
+++++

Filter a resource based on an event.

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - event
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type



.. _GCP.common.filters.offhour:

offhour
+++++++

Schedule offhours for resources see :ref:`offhours <offhours>`
for features and configuration.

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default_tz:
        type: string
      offhour:
        maximum: 23
        minimum: 0
        type: integer
      opt-out:
        type: boolean
      skip-days:
        items:
          pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}
          type: string
        type: array
      skip-days-from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      tag:
        type: string
      type:
        enum:
        - offhour
      weekends:
        type: boolean
      weekends-only:
        type: boolean
    required:
    - offhour
    - default_tz
    - type



.. _GCP.common.filters.onhour:

onhour
++++++

Schedule offhours for resources see :ref:`offhours <offhours>`
for features and configuration.

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default_tz:
        type: string
      onhour:
        maximum: 23
        minimum: 0
        type: integer
      opt-out:
        type: boolean
      skip-days:
        items:
          pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}
          type: string
        type: array
      skip-days-from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      tag:
        type: string
      type:
        enum:
        - onhour
      weekends:
        type: boolean
      weekends-only:
        type: boolean
    required:
    - onhour
    - default_tz
    - type



.. _GCP.common.filters.value:

value
+++++

Generic value filter using jmespath
    

.. container:: toggle

  .. container:: header

    Schema:

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - value
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
    required:
    - type




